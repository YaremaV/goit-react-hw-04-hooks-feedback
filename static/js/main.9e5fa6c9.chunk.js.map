{"version":3,"sources":["components/Section/Section.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["Section","title","children","className","Feedback","options","onLeaveFeedback","map","option","idx","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Container","App","state","getFeedback","feedBack","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","keys","Object","stats","values","some","value","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VAEe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,qBAAIC,UAAU,QAAd,cAAwBF,KACvBC,K,MCFQ,SAASE,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC1C,OACE,cAACN,EAAD,CAASC,MAAM,wBAAf,SACGI,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBACEN,UAAU,SAEVO,KAAK,SACLC,KAAMH,EACNI,QAAS,kBAAMN,EAAgBE,IALjC,SAOGA,GALIC,Q,MCNA,SAASI,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,eAAClB,EAAD,CAASC,MAAM,aAAf,UACE,uCAAUa,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,mDAAsBC,EAAtB,U,MCdS,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,mBAAGjB,UAAU,UAAb,SAAwBiB,I,UCClBC,EAFG,SAAC,GAAD,IAAGnB,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAU,YAAf,SAA4BD,KCI1DoB,E,4MAWJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,EAItCG,mBAAqB,WAA0C,IAAD,yDAAf,EAAKL,MAA5BT,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,IACrC,OAAOF,EAAOC,EAAUC,G,EAG1Ba,gCAAkC,WAA4B,IAAD,yDAAf,EAAKN,MAAdT,EAAwB,EAAxBA,KACnC,OAAOgB,KAAKC,MAAOjB,EAAO,EAAKc,qBAAwB,M,4CAGzD,WACE,MAA+BI,KAAKT,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBiB,EAAOC,OAAOD,KAAKD,KAAKT,OACxBY,EAAQD,OAAOE,OAAOJ,KAAKT,OAEjC,OACE,eAAC,EAAD,WACE,cAACnB,EAAD,CAAUC,QAAS4B,EAAM3B,gBAAiB0B,KAAKR,cAE9CW,EAAME,MAAK,SAAAC,GAAK,OAAIA,EAAQ,KAC3B,cAACzB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,KAAKJ,qBACZV,mBAAoBc,KAAKH,oCAG3B,cAACV,EAAD,CAAcC,QAAQ,6B,GAjDdmB,aAAZjB,EACGkB,aAAe,CACpBtB,mBAAoB,GAsDTI,QC1DfmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9e5fa6c9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className=\"title\"> {title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Section from '../Section/Section';\r\nimport './feedback.css';\r\n\r\nexport default function Feedback({ options, onLeaveFeedback }) {\r\n  return (\r\n    <Section title=\"Please leave Feedback\">\r\n      {options.map((option, idx) => (\r\n        <button\r\n          className=\"button\"\r\n          key={idx}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </Section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './statistics.css';\r\nimport Section from '../Section/Section';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <Section title=\"Statistics\">\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback:{positivePercentage}%</p>\r\n    </Section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './notification.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className=\"message\">{message}</p>;\r\n}\r\n","import React from 'react';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Feedback from './components/Feedback/Feedback';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Notification from './components/Notification/Notification';\r\nimport Container from './components/Container/Container';\r\n\r\nclass App extends Component {\r\n  static defaultProps = {\r\n    positivePercentage: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n  };\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  getFeedback = feedBack => {\r\n    this.setState(prevState => ({\r\n      [feedBack]: prevState[feedBack] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = ({ good, neutral, bad } = this.state) => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = ({ good } = this.state) => {\r\n    return Math.round((good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const keys = Object.keys(this.state);\r\n    const stats = Object.values(this.state);\r\n\r\n    return (\r\n      <Container>\r\n        <Feedback options={keys} onLeaveFeedback={this.getFeedback} />\r\n\r\n        {stats.some(value => value > 0) ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}